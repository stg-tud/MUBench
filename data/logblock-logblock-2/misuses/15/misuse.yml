api:
- java.io.DataOutputStream
violations:
- missing/call
crash: false
description: |
  When a DataOutputStream instance wraps an underlying ByteArrayOutputStream instance,
  it is recommended to flush or close the DataOutputStream before invoking the underlying instances's toByteArray().
  Also, it is a good practice to call flush/close explicitly as mentioned for example [here](http://stackoverflow.com/questions/2984538/how-to-use-bytearrayoutputstream-and-dataoutputstream-simultaneously-java).
  This pull request adds a close method before calling toByteArray().
fix:
  commit: https://github.com/emopers/LogBlock-2/commit/64c15f9d88df84837a9e5e294100aaeeb69c7123
  revision: 64c15f9d88df84837a9e5e294100aaeeb69c7123
internal: false
location:
  file: org/logblock/entry/BlobTest.java
  method: paintingTest()
report: https://github.com/LogBlock/LogBlock-2/pull/9
source:
  name: Owolabi's Dataset ASE'16
  url: fsl.cs.illinois.edu/spec-eval/
